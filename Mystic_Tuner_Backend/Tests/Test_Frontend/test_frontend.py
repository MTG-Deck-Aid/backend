# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestAllButtons():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.ids = {}
    self.driver.get("http://localhost:3000/")
    self.driver.set_window_size(1721, 1033)
    self.apply_button_ids()
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def apply_button_ids(self):
    self.ids['newDeck'] = "Make a Deck"
    self.ids['newDeckMethod'] = By.LINK_TEXT

    self.ids['deckName'] = "input[aria-label='Deck Name']"
    self.ids['deckNameMethod'] = By.CSS_SELECTOR

    self.ids['chooseCommander'] = "//button[contains(text(), 'Choose Your Commander')]"
    self.ids['chooseCommanderMethod'] = By.XPATH

    self.ids['chooseCommanderSearch'] = "//input[@placeholder='Type to search...']"
    self.ids['chooseCommanderSearchMethod'] = By.XPATH

    self.ids['confirmCommanderSelection'] = "//button[contains(@class, 'bg-success') and contains(@class, 'text-success-700')]"
    self.ids['confirmCommanderSelectionMethod'] = By.XPATH

    self.ids['deckList'] = "/html/body/div/div/div[3]/div/div/div/div/textarea"
    self.ids['deckListMethod'] = By.XPATH

    self.ids['saveDeck'] = "//button[contains(text(), 'Save Deck')]"
    self.ids['saveDeckMethod'] = By.XPATH

    self.ids['getSuggestions'] = "//button[contains(text(), 'Get Suggestions')]"
    self.ids['getSuggestionsMethod'] = By.XPATH

    self.ids['editDeck'] = "//button[contains(text(), 'Edit Deck')]"
    self.ids['editDeckMethod'] = By.XPATH

    self.ids['home'] = ".w-\\[66px\\]"
    self.ids['homeMethod'] = By.CSS_SELECTOR

    self.ids['accountDropDown'] = "//img[@alt='Light User Icon']"
    self.ids['accountDropDownMethod'] = By.XPATH

    self.ids['login'] = "//span[contains(text(), 'Login')]"
    self.ids['loginMethod'] = By.XPATH

    self.ids['logo'] = "//img[@alt='Mystic Tuner logo']"
    self.ids['logoMethod'] = By.XPATH

  def test_identify_buttons(self):
    driver = self.driver


    driver.find_element(self.ids['newDeckMethod'], self.ids['newDeck']).click()
    time.sleep(1)
    driver.find_element(self.ids['deckNameMethod'], self.ids['deckName'])

    driver.find_element(self.ids['getSuggestionsMethod'], self.ids['getSuggestions'])
    driver.find_element(self.ids['editDeckMethod'], self.ids['editDeck']).click()

    driver.find_element(self.ids['chooseCommanderMethod'], self.ids['chooseCommander']).click()
    time.sleep(1)
    driver.find_element(self.ids['chooseCommanderSearchMethod'], self.ids['chooseCommanderSearch'])
    driver.find_element(self.ids['confirmCommanderSelectionMethod'], self.ids['confirmCommanderSelection']).click()

    driver.find_element(self.ids['deckListMethod'], self.ids['deckList'])
    driver.find_element(self.ids['saveDeckMethod'], self.ids['saveDeck'])
    time.sleep(1)
    driver.find_element(self.ids['homeMethod'], self.ids['home']).click()

  #TC-FR01
  def test_home(self):
    driver = self.driver
    driver.find_element(self.ids['logoMethod'], self.ids['logo'])

  #TC-FR02
  def test_return_to_home(self):
    driver = self.driver
    driver.find_element(self.ids['newDeckMethod'], self.ids['newDeck']).click()
    time.sleep(1)
    driver.find_element(self.ids['homeMethod'], self.ids['home']).click()
    driver.find_element(self.ids['logoMethod'], self.ids['logo'])

  #TC-FR03
  def test_login(self):
    driver = self.driver
    time.sleep(1)
    driver.find_element(self.ids['accountDropDownMethod'], self.ids['accountDropDown']).click()
    time.sleep(1)
    driver.find_element(self.ids['loginMethod'], self.ids['login'])

  #TC-FR04
  def test_search_for_valid_commander(self):
    pass

  #TC-FR05
  def test_search_for_invalid_commander(self):
    pass

  #TC-FR06
  def test_create_a_deck_as_guest(self):
    pass

  #TC-FR07
  def test_get_suggestions(self):
    pass

  #TC-FR08
  def test_apply_suggestions(self):
    pass

  #TC-FR09
  def test_navigate_with_small_window(self):
    pass

  #TC-FR10
  def test_save_a_deck(self):
    pass

  #TC-FR11
  def test_load_a_deck(self):
    pass

  #TC-FR12
  def test_edit_a_deck(self):
    pass

  #TC-FR13
  def test_get_suggestions_on_existing_deck(self):
    pass

  #TC-FR14
  def test_paste_in_different_deck_formats(self):
    pass



def main():
    test = TestAllButtons()

if __name__ == "__main__":
  main()