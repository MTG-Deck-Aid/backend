# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestTestreturntohome():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_testreturntohome(self):
    # Test name: test_return_to_home
    # Step # | name | target | value
    # 1 | open | / | 
    self.driver.get("http://localhost:3000/")
    # 2 | setWindowSize | 1721x1033 | 
    self.driver.set_window_size(1721, 1033)
    # 3 | click | linkText=Make a Deck! | 
    self.driver.find_element(By.LINK_TEXT, "Make a Deck!").click()
    # 4 | click | css=.w-\[66px\] | 
    self.driver.find_element(By.CSS_SELECTOR, ".w-\\[66px\\]").click()
    # 5 | mouseOver | css=.w-\[66px\] | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".w-\\[66px\\]")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 6 | assertElementPresent | css=.self-center | 
    elements = self.driver.find_elements(By.CSS_SELECTOR, ".self-center")
    assert len(elements) > 0
  
